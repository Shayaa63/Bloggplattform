const bloggInl칛gg = document.getElementById("blogg-inl칛gg")
const skapaNyInl칛gg = document.getElementById ("skapa-ny-inl칛gg");
const nyInl칛ggSection = document.getElementById("ny-inl칛gg-section");
const nyInl칛ggForm = document.getElementById("ny-inl칛gg-form")
const publicera = document.getElementById("publicera")
const senastPubliceradSection = document.getElementById("senast-publicerad-section")
const visaAllaKnapp  = document.getElementById("visa-alla-knapp")
const senasteVisning = document.getElementById("senaste-visning")
const senasteVisningSection = document.getElementById("senaste-visning-section")
const ingaInl칛ggMeddelande = document.getElementById("inga-inl칛gg-meddelande")

let tidigareInl칛ggen = document.getElementById("tidigare-inl칛ggen")

function visaSektioner({ nyInl칛gg = false, blogg = false, senaste = false, ingaInl칛ggM = false }) {
    nyInl칛ggSection.style.display = nyInl칛gg ? "block" : "none";
    bloggInl칛gg.style.display = blogg ? "block" : "none";
    senasteVisningSection.style.display = senaste ? "block" : "none";
    ingaInl칛ggMeddelande.style.display = ingaInl칛ggM ? "block" : "none";
}


skapaNyInl칛gg.addEventListener("click", (e)=>{
    visaSektioner({nyInl칛gg: true})
});

function OmTomLista() {
    if (h칛mtaData("inl칛gg").length === 0) {
        visaSektioner({ blogg: true, ingaInl칛ggM: true });
    }
}

visaAllaKnapp.addEventListener("click", () =>{
    visaSektioner({blogg: true})
    const allaInl칛gg = h칛mtaData ("inl칛gg")
    tidigareInl칛ggen.innerHTML= "";
    OmTomLista()
    allaInl칛gg.forEach(inl칛gg => {
        const artikel = skapaInl칛ggElement(inl칛gg)
        tidigareInl칛ggen.appendChild(artikel)
    }) 
})

senastPubliceradSection.addEventListener("click", () => {
    visaSektioner({senaste: true})

    const allaInl칛gg = h칛mtaData("inl칛gg");
    const senasteInl칛gg = allaInl칛gg[allaInl칛gg.length - 1];

    senasteVisning.innerHTML = "";

    if (senasteInl칛gg) {
        const artikel = skapaInl칛ggElement(senasteInl칛gg);
        senasteVisning.appendChild(artikel);
    } else {
        senasteVisning.innerHTML = "<p>Inga inl칛gg hittades.</p>";
    }
});

function h칛mtaDatumochTid() {
    const nu = new Date();
    const datumTid = nu.toLocaleString("sv-SE", {
        day: "numeric",
        month: "long",
        year: "numeric",
        hour: "2-digit",
        minute: "2-digit"
    });
    return datumTid
}


function h칛mtaData(nyckel) {
    try{
        const data= JSON.parse(localStorage.getItem(nyckel)) || [];
        return Array.isArray(data) ? data : [];
    } catch (e) {
        console.log("Kunde inte l칛sa inl칛gg fr친n localStorage:", e)
        return [];
    }
}

function sparaData(data,nyckel) {
  const alla = h칛mtaData(nyckel);
  // l칛gger till inl칛gget sist i arrayn
  alla.push(data);
  //G칬r det till j-son och spara det i local storage
  localStorage.setItem(nyckel, JSON.stringify(alla));
}

function skapaKnapp (text, klassNamn, klickFunktion){
    const knapp = document.createElement("button");
    knapp.textContent = text;
    knapp.classList.add(klassNamn);

    if (typeof klickFunktion === "function") {
        knapp.addEventListener("click", klickFunktion);
    }
    return knapp;
}

function taBortInl칛gg(inl칛ggAttTaBort) {
    const alla = h칛mtaData("inl칛gg");
    const uppdateradLista = alla.filter(inl칛gg => {
        return !(inl칛gg.titel === inl칛ggAttTaBort.titel &&
            inl칛gg.f칬rfattare === inl칛ggAttTaBort.f칬rfattare &&
            inl칛gg.tid === inl칛ggAttTaBort.tid);
    });

    localStorage.setItem("inl칛gg", JSON.stringify(uppdateradLista));
    
    if (uppdateradLista.length === 0) {
        tidigareInl칛ggen.innerHTML = ""; // Rensa DOM
    }
}

function skickaKommentar(inl칛gg,kommentarFormul칛r, kommentarLista){
    // H칛mta v칛rden fr친n formul칛ret
    const textarea = kommentarFormul칛r.querySelector("textarea");
    const content = textarea.value;

    // H칛mtar in den akutella datum och tid
    const datumOchTidNu = h칛mtaDatumochTid()

    //Sparar kommentaren i ett objekt
    const kommentar = {
        tillh칬r: inl칛gg.tid,
        inneh친ll: content,
        tid: datumOchTidNu
    };

    const varning = document.getElementById("varning");
    if (!content || !content.trim()){
        varning.textContent = "Du m친ste fylla i alla f칛lt innan du kan publicera.";
        // stoppar funktionen
        return; 
    }else {
        varning.textContent ="";
        sparaData(kommentar,"kommentarer")
        textarea.value = "";
    }
    
    const kommentarElement = document.createElement("p");
    kommentarElement.innerHTML = `<strong>${kommentar.tid}</strong>: ${kommentar.inneh친ll}`;
    kommentarLista.appendChild(kommentarElement);
}

function skapaKommentarsSektionen (inl칛gg){
    const kommetarSektion = document.createElement("div");
    //=============================================================

    //skapa en fomul칛r f칬r att kunna skriva sin kommentar
    const kommentarFormul칛r = document.createElement("form")
    kommentarFormul칛r.classList.add("ny-inl칛gg-form")
    kommentarFormul칛r.style.display = "none";
    kommentarFormul칛r.innerHTML = ` 
    <textarea placeholder="Skriv en kommentar..." rows="3"></textarea>
    `;

    const skickaKommentarKnapp = document.createElement("button")
    skickaKommentarKnapp.textContent = "Skicka kommentar";
    skickaKommentarKnapp.classList.add("ta-bort-inl칛gg")
    kommentarFormul칛r.appendChild(skickaKommentarKnapp);

    skickaKommentarKnapp.addEventListener("click", (e)=>{
        e.preventDefault();
        skickaKommentar(inl칛gg, kommentarFormul칛r, kommentarLista);
    })
    //=============================================================

    const kommentarLista = document.createElement("div")
    kommentarLista.classList.add("inl칛gg");
    kommentarFormul칛r.appendChild(kommentarLista)

    kommentarFormul칛r.kommentarListaEgenskap = kommentarLista;

    const tidigareKommentarer = h칛mtaData("kommentarer").filter(k => k.tillh칬r === inl칛gg.tid);
    tidigareKommentarer.forEach(k => {
        const kommentarElement = document.createElement("p");
        kommentarElement.innerHTML = `<strong>${k.tid}</strong>: ${k.inneh친ll}`;
        kommentarLista.appendChild(kommentarElement);
    });

    //=============================================================
    
    const kommentarKnapp = skapaKnapp ("Kommentera", "kommentar-sektion-knapp", ()=>{
    if (kommentarFormul칛r.style.display === "none") {
        kommentarFormul칛r.style.display = "block";
        kommentarKnapp.textContent = "D칬lj kommentar";
    }else{
        kommentarFormul칛r.style.display = "none";
        kommentarKnapp.textContent = "Kommentera";
    }
    })

    //=============================================================
    kommetarSektion.appendChild(kommentarKnapp)
    kommetarSektion.appendChild(kommentarFormul칛r)
    
    return kommetarSektion
}


function skapaGillaKnapp (inl칛ggTid){
    const tidigareGillat = h칛mtaData("tidigareGillat");
    let gilla = tidigareGillat.includes(inl칛ggTid);
    const gillaKnapp = skapaKnapp (gilla ? "仇벒잺" : "游밼", "gilla-knapp", ()=>{
        gilla = !gilla;
        gillaKnapp.textContent = gilla ? "仇벒잺" : "游밼";
        uppdateraGillatStatus(inl칛ggTid, gilla)
    })
    return gillaKnapp;
}

function uppdateraGillatStatus(inl칛ggTid, gilla){
    let uppdateraGillat = h칛mtaData("tidigareGillat").filter(tid => tid !== inl칛ggTid);

    if (gilla){
        uppdateraGillat.push(inl칛ggTid)
    }
    localStorage.setItem("tidigareGillat", JSON.stringify(uppdateraGillat));
}

function skapaTabortKnapp (inl칛gg,artikel){
    const taBortKnapp = skapaKnapp ("Ta bort", "ta-bort-inl칛gg", ()=>{
        taBortInl칛gg(inl칛gg);
        artikel.remove(); // Tar bort fr친n DOM
        OmTomLista()
    })
    return taBortKnapp;
}

function skapaArtikelElement (inl칛gg){
    const artikel = document.createElement("article");
    artikel.classList.add("inl칛gg");

    // L칛gg till v칛rdet i den nya articlen 
    artikel.innerHTML = `
        <h3>${inl칛gg.titel}</h3>
        <p>${inl칛gg.tid} av <strong>${inl칛gg.f칬rfattare}</strong></p>
        <p>${inl칛gg.inneh친ll.replace(/\n/g, "<br>")}</p>
    `;
    return artikel;
}

function skapaInl칛ggElement(inl칛gg) {
    const artikel = skapaArtikelElement(inl칛gg)

    const gillaKnapp = skapaGillaKnapp(inl칛gg.tid)
    artikel.appendChild(gillaKnapp);

    const taBortKnapp = skapaTabortKnapp(inl칛gg,artikel)
    artikel.appendChild(taBortKnapp);

    const kommentarsSektionen = skapaKommentarsSektionen(inl칛gg)
    artikel.appendChild(kommentarsSektionen);

  return artikel;
}

function l칛ggTillInl칛gg(inl칛gg){
    visaSektioner({blogg: true})
    const nyArticle = skapaInl칛ggElement(inl칛gg)
    // l칛gger till s친 den hamnar under blogg inl칛gg
    tidigareInl칛ggen.prepend(nyArticle); // l칛gger 칬verst
}


function publiceraInl칛gg (e){
    visaSektioner({blogg: true})
    ingaInl칛ggMeddelande.style.display = "none";

    // H칛mta v칛rden fr친n formul칛ret
    const title = document.getElementById("title").value;
    const author = document.getElementById("author").value;
    const content = document.getElementById("content").value;

    //kontrollerar om n친got 칛r tomt
    const varning = document.getElementById("varning");

    if (!title || !author || !content) {
        varning.textContent = "Du m친ste fylla i alla f칛lt innan du kan publicera.";
        bloggInl칛gg.style.display = "none";
        // stoppar funktionen
        return; 
    } else {
        // rensar meddelandet om allt 칛r ifyllt
        varning.textContent = ""; 
        // H칛mtar in den akutella datum och tid
        const datumOchTidNu = h칛mtaDatumochTid()

        //Sparar blogg inl칛ggen i ett objekt "inl칛gg" 
        const inl칛gg = {
            titel: title,
            f칬rfattare: author,
            inneh친ll: content,
            tid: datumOchTidNu
        };

        l칛ggTillInl칛gg(inl칛gg) 
        sparaData(inl칛gg,"inl칛gg")
        nyInl칛ggForm.reset();
        nyInl칛ggSection.style.display = "none";
    }
};

publicera.addEventListener("click", publiceraInl칛gg)


window.addEventListener("DOMContentLoaded", (e)=>{
    const sparade = h칛mtaData("inl칛gg")
    if (sparade.length > 0) {
        ingaInl칛ggMeddelande.style.display = "none";
    }
    sparade.forEach(l칛ggTillInl칛gg)
});